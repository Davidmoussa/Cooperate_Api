{"version":3,"sources":["webpack:///src/app/layout/registration-requests/registration-requests.component.html","webpack:///src/app/layout/registration-requests/registration-requests.component.css","webpack:///src/app/layout/registration-requests/registration-requests.component.ts","webpack:///src/app/layout/registration-requests/registration-requests.module.ts","webpack:///src/app/layout/registration-requests/registrationRrequests-routing.module.ts","webpack:///src/app/shared/services/registration-requests.service.ts"],"names":["RegistrationRequestsComponent","registrationSrvice","data","getALLData","getAll","subscribe","result","console","log","id","verify","selector","template","animations","RegistrationRequestsModule","declarations","imports","routes","path","component","RegistrationRequestsRoutingModule","forChild","exports","RegistrationRequestsService","http","apiUrl","httpOptions","headers","get","pipe","handleError","acountId","body","post","JSON","stringify","error","ErrorEvent","message","status","providedIn"],"mappings":"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","file":"registration-requests-registration-requests-module-es5.js","sourcesContent":["export default \"<div [@routerTransition]>\\n    <h2 class=\\\"text-muted\\\"> {{'Registration Requsts' | translate }} </h2>\\n   \\n\\n    <!-- /Table for registration requests -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-xl-12\\\">\\n            \\n                <table class=\\\"table table-hover  table-bordered table-striped text-center \\\">\\n                    <thead>\\n                        <tr>\\n                            <th>{{'id' | translate }}</th>\\n                            <th>{{'Name' | translate }}</th>\\n                            <th>{{'Phone Number' | translate }}</th>\\n                            <th>{{'Category' | translate }}</th>\\n\\n                            <th>Action</th>\\n\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let user of data\\\">\\n                            <th scope=\\\"row\\\">{{ user.id }}</th>\\n                            <td>{{ user.projectAName }}</td>\\n                            <td>{{ user.phoneNumber  }}</td>\\n                            <td>{{ user.proJectType.aName  }}</td>\\n\\n                            <td>\\n                                 <button class=\\\"btn btn-sm btn-danger mr-2 \\\" (click)=\\\"verify(user.id)\\\" type=\\\"button\\\">verify</button>\\n                            </td>\\n\\n                        </tr>\\n\\n\\n\\n                    </tbody>\\n                </table>\\n            \\n        </div>\\n    </div>\\n</div>\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9yZWdpc3RyYXRpb24tcmVxdWVzdHMvcmVnaXN0cmF0aW9uLXJlcXVlc3RzLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { RegistrationRequestsService } from '../../shared/services/registration-requests.service';\n\n@Component({\n  selector: 'app-registration-requests',\n  templateUrl: './registration-requests.component.html',\n  styleUrls: ['./registration-requests.component.css'],\n  animations: [routerTransition()],\n\n})\nexport class RegistrationRequestsComponent implements OnInit {\n  data = [\n\n  ];\n  constructor(\n    private registrationSrvice: RegistrationRequestsService\n  ) {\n    this.getALLData()\n  }\n\n  getALLData() {\n    this.registrationSrvice.getAll().subscribe((result) => {\n      this.data = result.data;\n      console.log('JSON Response = ', this.data);\n    })\n  }\n  verify(id: string) {\n    this.registrationSrvice.verify(id).subscribe((result) => {\n      console.log(result);\n      this.getALLData()\n    })\n  }\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RegistrationRequestsComponent } from './registration-requests.component';\nimport { NgbAlertModule, NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { RegistrationRequestsRoutingModule } from './registrationRrequests-routing.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\n\n@NgModule({\n  declarations: [RegistrationRequestsComponent],\n  imports: [NgbAlertModule, NgbCarouselModule,RegistrationRequestsRoutingModule,TranslateModule,\n    CommonModule\n  ]\n})\nexport class RegistrationRequestsModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegistrationRequestsComponent } from './registration-requests.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RegistrationRequestsComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class RegistrationRequestsRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationRequestsService {\n\n  apiUrl = 'https://api.egypt-youth.com:4430/api/Acount/Seallers/Requst'\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  getAll(): Observable<any> {\n    return this.http.get(this.apiUrl)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  verify(acountId: string): Observable<any> {\n    let body = {\n      \"seallerId\": acountId,\n      \"confierm\": true\n    }\n    return this.http.post<any>(\"https://api.egypt-youth.com:4430/api/Acount/Sealler/Confierm\", JSON.stringify(body), this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.log(error.error.message)\n\n    } else {\n      console.log(error.status)\n    }\n    return throwError(\n      console.log('Something is wrong!'));\n  };\n\n}\n"]}