{"version":3,"sources":["webpack:///src/app/layout/users/users.component.html","webpack:///src/app/layout/users/users-routing.module.ts","webpack:///src/app/layout/users/users.component.css","webpack:///src/app/layout/users/users.component.ts","webpack:///src/app/layout/users/users.module.ts","webpack:///src/app/shared/services/users.service.ts"],"names":["routes","path","component","UsersRoutingModule","imports","forChild","exports","UsersComponent","usersSrvice","data","getAllUsers","getAll","subscribe","result","console","log","id","block","unBlock","selector","template","animations","UsersModule","declarations","UsersService","http","apiUrl","httpOptions","headers","get","pipe","handleError","acountId","body","post","JSON","stringify","error","ErrorEvent","message","status","providedIn"],"mappings":"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","file":"users-users-module-es5.js","sourcesContent":["export default \"<div [@routerTransition]>\\n    <h2 class=\\\"text-muted\\\">Users </h2>\\n    <form>\\n        <div class=\\\"form-row align-items-center\\\">\\n\\n            <div class=\\\"col-auto\\\">\\n                <div class=\\\"form-group input-group\\\">\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" />\\n                    <div class=\\\"input-group-append\\\">\\n                        <button class=\\\"btn btn-secondary\\\" type=\\\"button\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n\\n                </div>\\n            </div>\\n\\n        </div>\\n    </form>\\n\\n\\n    <!-- /Table for users -->\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col-xl-12\\\">\\n            <div class=\\\"card mb-3\\\">\\n                <table class=\\\"table table-hover  table-bordered table-striped text-center \\\">\\n                    <thead>\\n                        <tr>\\n                            <th> #id</th>\\n                            <th>Name</th>\\n                            <th>Phone Number</th>\\n                            <th>Block/Unblock</th>\\n\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let user of data\\\">\\n                            <ng-container *ngIf=\\\"user.confirmed!=3\\\">\\n                                <th scope=\\\"row\\\">{{ user.id }}</th>\\n                                <td>{{ user.name  }}</td>\\n                                <td>{{ user.phoneNumber }}</td>\\n                                <td>\\n                                    <div class=\\\"text-center\\\">\\n\\n                                        <button style=\\\"background-color: rgb(77, 74, 74);height: 100%;\\\" *ngIf=\\\"!user.block\\\" type=\\\"button\\\" class=\\\"btn btn-xs \\\"(click)=\\\"block(user.id)\\\">\\n                                            <i class=\\\"fa fa-lock\\\" aria-hidden=\\\"true\\\"></i>\\n\\n                                        </button>\\n                                    \\n                                       \\n                                        <button style=\\\"background-color: rgb(168, 165, 165);height: 100%;\\\" *ngIf=\\\"user.block\\\" type=\\\"button\\\" class=\\\"btn btn-xs \\\"(click)=\\\"unBlock(user.id)\\\">\\n                                            <i class=\\\"fa fa-unlock\\\" aria-hidden=\\\"true\\\"></i>\\n\\n                                        </button>\\n\\n\\n                                    </div>\\n                                </td>\\n                            </ng-container>\\n                        </tr>\\n\\n\\n\\n                    </tbody>\\n\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UsersComponent } from './users.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsersComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsersRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\nimport { routerTransition } from '../../router.animations';\nimport { UsersService } from '../../shared/services/users.service';\nimport { UserBlock } from '../../shared/model/userBlock';\n\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css'],\n  animations: [routerTransition()]\n\n})\nexport class UsersComponent implements OnInit {\n  data = [];\n  \n\n\n\n\n  constructor(private usersSrvice: UsersService) {\n    this.getAllUsers();\n  }\n\n  getAllUsers() {\n    this.usersSrvice.getAll().subscribe((result) => {\n      this.data = result.data;\n      console.log('JSON Response = ', this.data);\n    })\n\n  }\n\n  block(id: number) {\n\n    this.usersSrvice.block(id).subscribe((result: any) => {\n      this.getAllUsers();\n      console.log(result)\n    })\n  }\n\n\n  unBlock(id: number) {\n    this.usersSrvice.unBlock(id).subscribe((result: any) => {\n      console.log(result)\n      this.getAllUsers();\n    })\n  }\n\n\n\n\n\n\n\n\n\n  ngOnInit(): void { }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbAlertModule, NgbCarouselModule } from '@ng-bootstrap/ng-bootstrap';\nimport { StatModule } from '../../shared/modules';\nimport { UsersComponent } from './users.component';\nimport { UsersRoutingModule } from './users-routing.module';\n\n\n@NgModule({\n  declarations: [UsersComponent],\n  imports: [UsersRoutingModule,NgbAlertModule, NgbCarouselModule,StatModule,\n    CommonModule\n  ]\n})\nexport class UsersModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { UserBlock } from '../model/userBlock';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersService {\n  apiUrl = \"http://46.101.105.124/api/Acount\"\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getAll(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/block`)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n  block(acountId: number): Observable<any> {\n    let body = {\n      \"acountId\": acountId,\n      \"block\": true\n    }\n    debugger\n    return this.http.post<any>(`${this.apiUrl}/block`, JSON.stringify(body), this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n  unBlock(acountId: number): Observable<any> {\n    let body = {\n      \"acountId\": acountId,\n      \"block\": false\n    }\n    return this.http.post<any>(`${this.apiUrl}/block`, JSON.stringify(body), this.httpOptions)\n      .pipe(\n        catchError(this.handleError)\n      )\n  }\n\n\n\n\n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.log(error.error.message)\n\n    } else {\n      console.log(error.status)\n    }\n    return throwError(\n      console.log('Something is wrong!'));\n  };\n}\n"]}